{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","user","id","name","email","CardList","users","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","this","filteredUsers","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAGaA,G,kBAAO,SAAAC,GAAK,OACvB,sBAAKC,UAAU,iBAAf,UACE,qBAAKC,IAAI,eAAeC,IAAG,+BAA0BH,EAAMI,KAAKC,GAArC,4BAC3B,mCAAML,EAAMI,KAAKE,KAAjB,OACA,kCAAKN,EAAMI,KAAKG,MAAhB,YCHSC,EAAW,SAAAR,GACtB,OACE,qBAAKC,UAAU,YAAf,SAEID,EAAMS,MAAMC,KAAI,SAAAN,GAAI,OAClB,cAAC,EAAD,CAAoBA,KAAMA,GAAfA,EAAKC,UCNbM,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OACvB,uBACEZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCmCCG,E,kDArCd,aAAe,IAAD,8BACb,gBAcAH,aAAe,SAACI,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAbxC,EAAKC,MAAQ,CACTb,MAAO,GACPU,YAAa,IALJ,E,gEASO,IAAD,OACnBI,MAAM,8CACJC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAf,GAAK,OAAI,EAAKS,SAAS,CAAET,e,+BAOtB,IAAD,EACwBkB,KAAKL,MAA5Bb,EADD,EACCA,MAAOU,EADR,EACQA,YACTS,EAAgBnB,EAAMoB,QAAO,SAAAzB,GAAI,OACrCA,EAAKE,KAAKwB,cAAcC,SAASZ,EAAYW,kBAE/C,OACE,sBAAK7B,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CACEW,YAAY,kBACZC,aAAcc,KAAKd,eAErB,cAAC,EAAD,CAAUJ,MAAOmB,W,GAhCPI,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.72e7ed61.chunk.js","sourcesContent":["import React from 'react'\r\nimport './card-styles.css'\r\n\r\nexport const Card = props => (\r\n  <div className=\"card-container\">\r\n    <img alt=\"user monster\" src={`https://robohash.org/${props.user.id}?set=set2&size=180x250`} />\r\n    <h2> {props.user.name} </h2>\r\n    <p> {props.user.email} </p>\r\n  </div>\r\n)","import React from 'react';\r\nimport './card-list.styles.css'\r\nimport { Card } from '../card/card.component'\r\n\r\nexport const CardList = props => {\r\n  return (\r\n    <div className=\"card-list\">\r\n      {\r\n        props.users.map(user => (\r\n          <Card key={user.id} user={user} />\r\n        ))\r\n      }\r\n    </div>\r\n  )\r\n}","import React from 'react'\r\nimport './search-box.styles.css'\r\n\r\nexport const SearchBox = ({placeholder, handleChange}) => (\r\n  <input\r\n    className=\"search\"\r\n    type='search'\r\n    placeholder={placeholder}\r\n    onChange={handleChange}\r\n  />\r\n)","import { Component } from 'react';\nimport './App.css'\nimport { CardList } from './components/card-list/card-list.component'\nimport { SearchBox } from './components/search-box/search-box.component'\n\nclass App extends Component {\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.state = {\n      users: [],\n      searchField: ''\n    };\n\t}\n\n\tcomponentDidMount() {\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\n\t\t\t.then(response => response.json())\n\t\t\t.then(users => this.setState({ users }))\n  }\n  \n  handleChange = (e) => {\n    this.setState({ searchField: e.target.value })\n  }\n\n  render() {\n    const { users, searchField } = this.state;\n    const filteredUsers = users.filter(user => \n      user.name.toLowerCase().includes(searchField.toLowerCase())\n    )\n    return (\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <SearchBox\n          placeholder=\"Search Monsters\"\n          handleChange={this.handleChange}\n        />\n        <CardList users={filteredUsers}/>\n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}